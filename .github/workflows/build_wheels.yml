name: Build PYPI wheels for opencv-python

on:
  push:
    branches:
      - all
  pull_request:
    branches:
      - master
  release:
    # Only use the types keyword to narrow down the activity types that will trigger your workflow.
    types: [published, created, edited]


jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest] # ubuntu-latest,
        python-version: [3.6] # [3.6, 3.7, 3.8, 3.9]
        platform: [x32, x64]
        with_contrib: [0, 1]
        without_gui: [0, 1]
        build_sdist: [0]
        exclude:
          - os: macos-latest
            platform: x32
          - os: ubuntu-latest
            platform: x32

    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0

    - name: Update submodules
      run: |
        git submodule update --remote
        
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Setup MSBuild.exe
      if: ${{ matrix.os == 'windows-latest' }}
      uses: warrenbuckley/Setup-MSBuild@v1

    - name: build script
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        python --version
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        set "CI_BUILD=1" && python -m pip wheel --wheel-dir=%cd%\dist . --verbose
      shell: cmd

    - name: before test
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        cd ${{ github.workspace }}/tests
        $env:PYTHONWARNINGS = "ignore:::pip._internal.cli.base_command"
        &python -m pip install --user --no-warn-script-location (ls "../dist/opencv_*.whl")
        if ($LastExitCode -ne 0) {throw $LastExitCode}
      shell: powershell

    - name: run test
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        cd ${{ github.workspace }}/tests
        python -m unittest test
      shell: cmd

    - name: saving artifacts
      if: ${{ matrix.os == 'windows-latest' }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-wheels-${{ matrix.python-version }}-${{ matrix.platform }}-${{ matrix.with_contrib }}-${{ matrix.without_gui }}-${{ matrix.build_sdist }}
        path: dist\opencv*.whl

name: Build PYPI wheels for opencv-python

on:
  push:
    branches:
      - all
  pull_request:
    branches:
      - master
  release:
    # Only use the types keyword to narrow down the activity types that will trigger your workflow.
    types: [published, created, edited]


jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest] # ubuntu-latest,
        python-version: [3.8] # [3.6, 3.7, 3.8, 3.9]
        platform: [x64]
        with_contrib: [0, 1]
        without_gui: [0, 1]
        build_sdist: [0]
        # include:
        #   - os: ubuntu-latest
        #     python-version: 3.8
        #     build_sdist: 1
        #     with_contrib: 0
        #     without_gui: 0
        #   - os: ubuntu-latest
        #     python-version: 3.8
        #     build_sdist: 1
        #     with_contrib: 0
        #     without_gui: 1
        #   - os: ubuntu-latest
        #     python-version: 3.8
        #     build_sdist: 1
        #     with_contrib: 1
        #     without_gui: 0
        #   - os: ubuntu-latest
        #     python-version: 3.8
        #     build_sdist: 1
        #     with_contrib: 1
        #     without_gui: 1

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0

    - name: Update submodules
      run: |
        git submodule update --remote

    - name: Set up Python ${{ matrix.python-version }}
      run: |
        if [[ ! $env:PYTHON ]] {
          curl -o install_python.ps1 https://raw.githubusercontent.com/matthew-brett/multibuild/devel/install_python.ps1
          .\install_python.ps1
        }
        if [[ ! $env:PYTHON ]]; then echo "No PYTHON"; fi
        set PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%
        python --version

    - name: build script
      run: |
        "%PYTHON%\\python.exe" -m pip install --upgrade pip
        "%PYTHON%\\python.exe" -m pip install --upgrade setuptools
        set "CI_BUILD=1" && "%PYTHON%\\python.exe" -m pip wheel --wheel-dir=%cd%\dist . --verbose

    - name: before test
      run: |
        cd ${{ github.workspace }}/tests
        export PYTHONWARNINGS = "ignore:::pip._internal.cli.base_command"
        &"${{ matrix.python-version }}\\python.exe" -m pip install --user --no-warn-script-location (ls "../dist/opencv_*.whl")
        if [[ $? -ne 0 ]]; then exit $?; fi

    - name: run test
      run: |
        cd ${{ github.workspace }}/tests
        "%PYTHON%\\python.exe" -m unittest test

    - name: saving artifacts
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist\opencv*.whl
